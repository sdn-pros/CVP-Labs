# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  access_lists:
    type: list
    primary_key: name
    convert_types:
      - dict
    display_name: IP Extended Access-Lists (legacy model)
    description: |
      AVD currently supports 2 different data models for extended ACLs:

      - The legacy `access_lists` data model, for compatibility with existing deployments
      - The improved `ip_access_lists` data model, for access to more EOS features

      Both data models can coexists without conflicts, as different keys are used: `access_lists` vs `ip_access_lists`.
      Access list names must be unique.

      The legacy data model supports simplified ACL definition with `sequence` to `action` mapping:
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          description: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
            - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                description: Sequence ID
                convert_types:
                  - str
              action:
                type: str
                required: true
                description: |
                  Action as string
                  Example: "deny ip any any"
