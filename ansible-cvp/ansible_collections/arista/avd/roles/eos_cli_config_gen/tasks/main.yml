---
- name: "Collection {{ ansible_collection_name }} version {{ version }}{{ ('(git ' ~ git_tag ~ ')') if git_tag }} loaded from {{ collection_path }}"
  tags: [always, avd_version]
  set_fact:
    avd_collection_version: version
  vars:
    versions: "{{ lookup('pipe', 'ansible-galaxy collection list -p ' ~ collection_path ~ ' --format yaml ' ~ ansible_collection_name) | from_yaml }}"
    collection_path: "{{ (role_path | split('/'))[0:-4] | join('/') }}"
    version: "{{ versions[collection_path][ansible_collection_name].version | default('Unknown') }}"
    git_tag: "{{ lookup('pipe', 'git -C ' ~ collection_path ~ ' describe --tags --always 2>/dev/null', errors='ignore') }}"
  run_once: true
  failed_when: false

- name: Create required output directories if not present
  tags: [build, provision]
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  loop:
    - "{{ structured_dir }}"
    - "{{ documentation_dir }}"
    - "{{ eos_config_dir }}"
    - "{{ devices_dir }}"
  delegate_to: localhost
  run_once: true

- name: Include device intended structure configuration variables
  tags: [build, provision]
  include_vars:
    file: "{{ filename }}"
  delegate_to: localhost
  # errors='ignore' is needed for compatibility with ansible-core < 2.12
  when: structured_config is not defined and lookup('first_found', filename, skip=True, errors='ignore')
  vars:
    filename: "{{ structured_dir }}/{{ inventory_hostname }}.{{ avd_structured_config_file_format }}"

- name: Generate eos intended configuration
  tags: [build, provision]
  arista.avd.validate_and_template:
    template: eos-intended-config.j2
    dest: "{{ eos_config_dir }}/{{ inventory_hostname }}.cfg"
    mode: 0664
    schema: "{{ lookup('ansible.builtin.file', role_schema_path) | from_yaml }}"
    conversion_mode: "{{ avd_data_conversion_mode }}"
    validation_mode: "{{ avd_data_validation_mode }}"
  delegate_to: localhost
  register: eosconfig

- name: Generate device documentation
  tags: [build, provision, documentation]
  arista.avd.validate_and_template:
    template: "eos-device-documentation.j2"
    dest: "{{ devices_dir }}/{{ inventory_hostname }}.md"
    mode: 0664
    schema: "{{ lookup('ansible.builtin.file', role_schema_path) | from_yaml }}"
    conversion_mode: "{{ avd_data_conversion_mode }}"
    validation_mode: "{{ avd_data_validation_mode }}"
    add_md_toc: true
    md_toc_skip_lines: 3
  delegate_to: localhost
  when: generate_device_documentation | arista.avd.default(true)
